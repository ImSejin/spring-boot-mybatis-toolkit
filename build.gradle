import java.nio.charset.StandardCharsets

buildscript {
    ext {
        versions = [
                lombok         : "1.18.20",
                reflections    : "0.9.12",
                bytebuddy      : "1.11.8",
                typetools      : "0.6.3",
                jsqlparser     : "4.0",
                jackson        : "2.12.3",
                mybatis        : "3.5.7",
                springframework: "5.3.8",
                junit5         : "5.7.2",
                assertj        : "3.20.2",
        ]
    }

    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    id("java")
    id("java-library") // For using "api"; https://jongmin92.github.io/2019/05/09/Gradle/gradle-api-vs-implementation
    id("maven-publish") // For publishing artifact to maven central.
    id("signing") // For authentication when publishing artifact.
}

configurations {
    compileOnly {
        extendsFrom(annotationProcessor)
    }
}

allprojects {
    group = "io.github.imsejin"
}

// subprojects {
configure(subprojects) { it ->
    if (Boolean.valueOf(it.property("library") as String)) {
        apply(plugin: "maven-publish")
        apply(plugin: "signing")
    }

    apply(plugin: "java")
    apply(plugin: "java-library")

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    // Prevents error from occurring "unmappable character for encoding MS949".
    [compileJava, compileTestJava]*.options*.encoding = StandardCharsets.UTF_8

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        testImplementation(group: "org.junit.jupiter", name: "junit-jupiter-api", version: versions.junit5)
        testRuntimeOnly(group: "org.junit.jupiter", name: "junit-jupiter-engine", version: versions.junit5)
        testImplementation(group: "org.junit.jupiter", name: "junit-jupiter-params", version: versions.junit5)
        testImplementation(group: "org.assertj", name: "assertj-core", version: versions.assertj)
    }

    test {
        useJUnitPlatform()
    }
}

wrapper {
    gradleVersion = "7.0.1"
    distributionType = Wrapper.DistributionType.BIN
}

jar {
    enabled = true
}
